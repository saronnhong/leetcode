// Even Fibonacci numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

//1. find all fibonacci numbers using recursion
//2. if number is even, add to totalSum

//[0, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]


let evenFib = max => {
    let fibArr = [1, 1];
    let totalSum = 0;

    while (fibArr.length -1 < max) {
        let newValue = fibArr[fibArr.length - 1] + fibArr[fibArr.length - 2];
        // console.log([fibArr.length, newValue]);
        fibArr.push(newValue);
        if(newValue % 2 === 0){
            totalSum += newValue;
        }
    }
    // console.log(fibArr);
    return totalSum;

}

console.log(evenFib(10));
// 44
console.log(evenFib(5));
// 10
console.log(evenFib(40));

